<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haohan.platform.service.sys.modules.xiaodian.dao.office.CompanyPerformanceDao">
    
	<sql id="companyPerformanceColumns">
		a.id AS "id",
		a.evaluate_time AS "evaluateTime",
		a.evaluate_week AS "evaluateWeek",
		a.department AS "office.id",
		a.position AS "position",
		a.user_name AS "user.id",
		a.evaluate_info AS "evaluateInfo",
		a.week_report AS "weekReport",
		a.superior_evaluate AS "superiorEvaluate",
		a.evaluate_level AS "evaluateLevel",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		o4.name AS "office.name",
		u6.name AS "user.name",
		u7.name AS "createBy.name",
		u8.name AS "updateBy.name"
	</sql>
	
	<sql id="companyPerformanceJoins">
		LEFT JOIN sys_office o4 ON o4.id = a.department
		LEFT JOIN sys_user u6 ON u6.id = a.user_name
		LEFT JOIN sys_user u7 ON u7.id = a.create_by
		LEFT JOIN sys_user u8 ON u8.id = a.update_by
	</sql>
    
	<select id="get" resultType="CompanyPerformance">
		SELECT 
			<include refid="companyPerformanceColumns"/>
		FROM scm_company_performance a
		<include refid="companyPerformanceJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CompanyPerformance">
		SELECT 
			<include refid="companyPerformanceColumns"/>
		FROM scm_company_performance a
		<include refid="companyPerformanceJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="evaluateTime != null and evaluateTime != ''">
				AND a.evaluate_time LIKE
					<if test="dbName == 'oracle'">'%'||#{evaluateTime}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{evaluateTime}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{evaluateTime},'%')</if>
			</if>
			<if test="office != null and office.id != null and office.id != ''">
				AND a.department = #{office.id}
			</if>
			<if test="position != null and position != ''">
				AND a.position = #{position}
			</if>
			<if test="user != null and user.id != null and user.id != ''">
				AND a.user_name = #{user.id}
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
				AND a.create_by = #{createBy.id}
			</if>
			<if test="evaluateLevel != null and evaluateLevel != ''">
				AND a.evaluate_level = #{evaluateLevel}
			</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.department, a.user_name, a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CompanyPerformance">
		SELECT 
			<include refid="companyPerformanceColumns"/>
		FROM scm_company_performance a
		<include refid="companyPerformanceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO scm_company_performance(
			id,
			evaluate_time,
			evaluate_week,
			department,
			position,
			user_name,
			evaluate_info,
			week_report,
			superior_evaluate,
			evaluate_level,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{evaluateTime},
			#{evaluateWeek},
			#{office.id},
			#{position},
			#{user.id},
			#{evaluateInfo},
			#{weekReport},
			#{superiorEvaluate},
			#{evaluateLevel},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE scm_company_performance SET
			evaluate_time = #{evaluateTime},
			evaluate_week = #{evaluateWeek},
			department = #{office.id},
			position = #{position},
			user_name = #{user.id},
			evaluate_info = #{evaluateInfo},
			week_report = #{weekReport},
			superior_evaluate = #{superiorEvaluate},
			evaluate_level = #{evaluateLevel},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE scm_company_performance SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>